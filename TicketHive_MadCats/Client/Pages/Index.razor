@page "/"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using System.Text.Json
@using Newtonsoft.Json;
@using TicketHive_MadCats.Shared.Models;
@using TicketHive_MadCats.Shared.ViewModels;
@inherits LayoutComponentBase
@inject NavigationManager navMan
@inject HttpClient client
@inject AuthenticationStateProvider authStateProvider

<h1 style="color: #305076;">Welcome to Ticket Hive!</h1>
<p>Here's some information about our app:
    <em>
        Make your own damn reservations!
    </em>
</p>
<!-- Lägg till appens logga här typ -->
<img src="/images/logos/yellow.png" alt="TicketHiveLogo" width="250" height="250">
<p>Get started by logging in or registering:</p>
<div>
    <h2>Click on the login or register button on top of the navigation bar!</h2>
</div>

<button @onclick="testDeser">Testa deserialisera</button>
<button @onclick="testAdminEndpoint">Testa admin endpoint (LOGGA IN FÖRST)</button>

<style>
    .btn-login, .btn-register {
        display: inline-block;
        background-color: #fbe89c;
        color: #fff;
        font-size: 16px;
        padding: 12px 24px;
        border-radius: 4px;
        text-decoration: none;
        margin-right: 8px;
    }

        .btn-login:hover, .btn-register:hover {
            background-color: #305076;
        }
</style>

@code{
    public async Task testDeser()
    {
        // Ger 500 error???
        var response1 = await client.GetAsync("/api/Events");
        var body1 = await response1.Content.ReadAsStringAsync();
        
        // Göra calls t.ex. om vi endast är inloggade
        //var authState = await authStateProvider.GetAuthenticationStateAsync();
        //var user = authState.User;

        //if (user.Identity.IsAuthenticated)
        //{
        //    var response = await client.GetAsync("https://localhost:7157/api/Events");
        //    var body = await response.Content.ReadAsStringAsync();
        //    List<EventViewModel> listOfModels = JsonConvert.DeserializeObject<List<EventViewModel>>(body);
        //}
    }

    public async Task testAdminEndpoint()
    {
        var authState = await authStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Claims.Where(c => c.ToString().Contains("Admin")).Any())
        {
            var response2 = await client.DeleteAsync("https://localhost:7157/api/Events/5");
            var code2 = response2.StatusCode;
            var body2 = await response2.Content.ReadAsStringAsync();
        }
    }
}