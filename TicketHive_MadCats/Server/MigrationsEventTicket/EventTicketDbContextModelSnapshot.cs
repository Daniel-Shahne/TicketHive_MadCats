// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TicketHive_MadCats.Server.Data;

#nullable disable

namespace TicketHive_MadCats.Server.MigrationsEventTicket
{
    [DbContext(typeof(EventTicketDbContext))]
    partial class EventTicketDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TicketHive_MadCats.Shared.Models.EventModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageSrcs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxTickets")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketPrice")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2023, 11, 15, 19, 27, 59, 959, DateTimeKind.Local).AddTicks(7395),
                            EventType = "Concert",
                            ImageSrcs = "[\"/images/event images/image-1.png\",\"/images/event images/image-2.png\"]",
                            Location = "Malmö, Sweden",
                            MaxTickets = 5,
                            Name = "Rock Concert",
                            TicketPrice = 100
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2023, 4, 22, 19, 27, 59, 959, DateTimeKind.Local).AddTicks(7458),
                            EventType = "Concert",
                            ImageSrcs = "[\"/images/event images/image-3.png\",\"/images/event images/image-4.png\"]",
                            Location = "Stockholm, Sweden",
                            MaxTickets = 2,
                            Name = "Latino Concert",
                            TicketPrice = 50
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2026, 4, 15, 19, 27, 59, 959, DateTimeKind.Local).AddTicks(7463),
                            EventType = "Tournament",
                            ImageSrcs = "[\"/images/event images/image-5.png\",\"/images/event images/image-6.png\"]",
                            Location = "Krakow, Poland",
                            MaxTickets = 100,
                            Name = "Dreamhack",
                            TicketPrice = 5000
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2023, 4, 16, 0, 27, 59, 959, DateTimeKind.Local).AddTicks(7467),
                            EventType = "Exhibition",
                            ImageSrcs = "[\"/images/event images/image-7.png\",\"/images/event images/image-8.png\"]",
                            Location = "Berlin, Germany",
                            MaxTickets = 20,
                            Name = "Art Exhibition",
                            TicketPrice = 5
                        });
                });

            modelBuilder.Entity("TicketHive_MadCats.Shared.Models.TicketModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EventModelId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EventModelId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EventModelId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            EventModelId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 3,
                            EventModelId = 2,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 4,
                            EventModelId = 2,
                            Username = "user"
                        });
                });

            modelBuilder.Entity("TicketHive_MadCats.Shared.Models.TicketModel", b =>
                {
                    b.HasOne("TicketHive_MadCats.Shared.Models.EventModel", "EventModel")
                        .WithMany("Tickets")
                        .HasForeignKey("EventModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EventModel");
                });

            modelBuilder.Entity("TicketHive_MadCats.Shared.Models.EventModel", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
